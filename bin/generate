#!/usr/bin/env bash

# MIT License

# Copyright (c) 2023 David Young

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# This is a simple wrapper script around our Python insult generator.

set -o pipefail

progname="$(basename $0)"

generator='src/generate.py'

usage() {
    cat <<EOF
Usage: $progname [OPTIONS]

This script is a simple wrapper around our Python-based insult generator. Other
than the '-h' flag, arguments are passed through to the generate.py script.

Options:
  -H    Show the generator's help message and exit.
  -h    Show this message and exit.
EOF

    exit 1
}

sanity_checks() {
    [[ -e $generator ]] || { echo "$progname: failed to locate the generator. Are you in the project root?"; exit 1; }

    which -s python3 || { echo "$progname: the python3 executable is missing, but this might not be an issue"; exit 1; }

    return 0
}

# --- main() ---

# We actually do NOT use getopts() here, as most command-line flags are passed directly
# through to the generator for validation.

case "$1" in
    -h) usage ;;
    -H) python3 $generator --help && exit 1 ;;
esac

sanity_checks

python3 $generator "$@"

exit $?

